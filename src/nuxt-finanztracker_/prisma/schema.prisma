generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model budgets {
  id         Int       @id @default(autoincrement())
  user_id    BigInt
  period     String
  amount     Decimal   @db.Decimal(10, 2)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  user       user      @relation(fields: [user_id], references: [userid], onDelete: Cascade)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model categories {
  id       Int        @id @default(autoincrement())
  name     String
  type     String
  user_id  BigInt?
  icon     String?
  color    String?
  user     user?      @relation(fields: [user_id], references: [userid], onDelete: Cascade)
  expenses expenses[]
  incomes  incomes[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model expenses {
  id          Int           @id @default(autoincrement())
  user_id     BigInt
  category_id Int
  use         String?
  amount      Decimal       @db.Decimal(10, 2)
  date        DateTime      @db.Date
  interval    interval_type @default(once)
  note        String?
  categories  categories    @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user          @relation(fields: [user_id], references: [userid], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model goals {
  id         Int       @id @default(autoincrement())
  user_id    BigInt
  name       String
  target     Decimal   @db.Decimal(10, 2)
  saved      Decimal?  @default(0) @db.Decimal(10, 2)
  due_date   DateTime? @db.Date
  created_at DateTime? @default(now()) @db.Timestamp(6)
  user       user      @relation(fields: [user_id], references: [userid], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model incomes {
  id          Int           @id @default(autoincrement())
  user_id     BigInt
  category_id Int
  source      String?
  amount      Decimal       @db.Decimal(10, 2)
  date        DateTime      @db.Date
  interval    interval_type @default(once)
  note        String?
  categories  categories    @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user          @relation(fields: [user_id], references: [userid], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user {
  userid        BigInt       @id(map: "User_pkey") @default(autoincrement())
  firstname     String
  lastname      String
  university    String
  birthdate     DateTime
  createdAt     DateTime     @default(now())
  username      String
  email         String       @unique(map: "User_email_key")
  password_hash String
  startamount   Int
  budgets       budgets[]
  categories    categories[]
  expenses      expenses[]
  goals         goals[]
  incomes       incomes[]
}

enum interval_type {
  once
  weekly
  monthly
  semesterly
  annual
}
